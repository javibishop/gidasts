// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TSModel;

namespace TSModel.Migrations
{
    [DbContext(typeof(TsModelo))]
    partial class TsModeloModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TSModel.Dominio.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Edad");

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("TSModel.TsAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password")
                        .HasMaxLength(20);

                    b.Property<string>("Username")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("TsAdmin");
                });

            modelBuilder.Entity("TSModel.TsAdminMenu", b =>
                {
                    b.Property<int>("AdminId");

                    b.Property<int>("MenuId");

                    b.HasKey("AdminId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("TsAdminMenu");
                });

            modelBuilder.Entity("TSModel.TsAdminRole", b =>
                {
                    b.Property<int>("AdminId");

                    b.Property<int>("RoleId");

                    b.HasKey("AdminId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("TsAdminRole");
                });

            modelBuilder.Entity("TSModel.TsMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TsMenu");
                });

            modelBuilder.Entity("TSModel.TsRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TsRole");
                });

            modelBuilder.Entity("TSModel.TsAdminMenu", b =>
                {
                    b.HasOne("TSModel.TsAdmin", "Admin")
                        .WithMany("AdminMenus")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TSModel.TsMenu", "Menu")
                        .WithMany("AdminMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TSModel.TsAdminRole", b =>
                {
                    b.HasOne("TSModel.TsAdmin", "Admin")
                        .WithMany("AdminRoles")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TSModel.TsRole", "Role")
                        .WithMany("AdminRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
